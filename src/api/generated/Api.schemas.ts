/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * BrewTrack API üçª
 * OpenAPI spec version: 1.0
 */
export interface UserDTO {
  id: string;
  email: string;
  firstName: string;
  lastName: string;
  /** @nullable */
  profilePicture?: string | null;
  createdAt: string;
}

export interface AuthLoginRequestDTO {
  email: string;
  password: string;
}

export interface AuthLoginResponseDTO {
  accessToken: string;
  refreshToken: string;
}

export interface AuthLoginGoogleRequestDTO {
  code: string;
}

export interface AuthRefreshTokenRequestDTO {
  refreshToken: string;
}

export interface AuthRegisterRequestDTO {
  firstName: string;
  lastName: string;
  email: string;
  /**
   * @minLength 7
   * @maxLength 34
   */
  password: string;
}

export interface AuthForgotPasswordRequestDTO {
  email: string;
}

export interface AuthForgotPasswordResponseDTO {
  message: string;
}

export interface AuthResetPasswordRequestDTO {
  token: string;
  /**
   * @minLength 7
   * @maxLength 34
   */
  newPassword: string;
}

export interface AuthResetPasswordResponseDTO {
  message: string;
}

export interface DrinkTypeDTO {
  /** Identifiant unique du type de boisson */
  id: string;
  /** Nom du type de boisson */
  name: string;
  /** Slug du type de boisson (identifiant convivial) */
  slug: string;
}

/**
 * Nom du type de boisson et son nombre d'occurrences
 */
export type DrinkTypeCountDTODrinkTypeCounts = { [key: string]: number };

export interface DrinkTypeCountDTO {
  /** Nom du type de boisson et son nombre d'occurrences */
  drinkTypeCounts: DrinkTypeCountDTODrinkTypeCounts;
}

/**
 * Nombre de boissons consomm√©es par mois
 */
export type MonthlyDrinkCountDTOMonthlyCounts = { [key: string]: number };

export interface MonthlyDrinkCountDTO {
  /** Nombre de boissons consomm√©es par mois */
  monthlyCounts: MonthlyDrinkCountDTOMonthlyCounts;
}

/**
 * Moyenne des litres consomm√©s par mois
 */
export type MonthlyAverageConsumptionDTOMonthlyAverage = {
  [key: string]: number;
};

export interface MonthlyAverageConsumptionDTO {
  /** Moyenne des litres consomm√©s par mois */
  monthlyAverage: MonthlyAverageConsumptionDTOMonthlyAverage;
}

export interface AddDrinkDTO {
  /** Identifiant de l'utilisateur */
  userId: string;
  /** Slug du type de boisson */
  drinkTypeSlug: string;
  /**
   * Quantit√© consomm√©e en litres
   * @minimum 0
   */
  litersConsumed: number;
  /** Date de consommation */
  drinkDate: string;
  /**
   * Type de boisson personnalis√© (si applicable)
   * @nullable
   */
  customType?: string | null;
}

/**
 * Type de boisson personnalis√© (si applicable)
 * @nullable
 */
export type DrinkDTOCustomType = { [key: string]: unknown } | null;

export interface DrinkDTO {
  /** Type de boisson */
  drinkType: DrinkTypeDTO;
  /** Identifiant du type de boisson */
  drinkTypeId: string;
  /**
   * Quantit√© consomm√©e en litres
   * @minimum 0
   */
  litersConsumed: number;
  /** Date de consommation */
  drinkDate: string;
  /**
   * Type de boisson personnalis√© (si applicable)
   * @nullable
   */
  customType?: DrinkDTOCustomType;
  /** Identifiant de l'utilisateur */
  userId: string;
}

export interface DrinkCountDTO {
  /** Identifiant de l'utilisateur */
  userId: string;
  /** Nombre de boissons de l'utilisateur */
  count: number;
}

export type GetDrinkTypeCountByUserIdParams = {
  /**
   * Date minimum (YYYY-MM-DD)
   */
  drink_date_gte?: string;
  /**
   * Date maximum (YYYY-MM-DD)
   */
  drink_date_lte?: string;
  /**
   * Type de boisson (slug)
   */
  type?: string;
};

export type GetMonthlyDrinkCountParams = {
  /**
   * Date minimum (YYYY-MM-DD)
   */
  drink_date_gte?: string;
  /**
   * Date maximum (YYYY-MM-DD)
   */
  drink_date_lte?: string;
  /**
   * Type de boisson (slug)
   */
  type?: string;
};

export type GetMonthlyAverageConsumptionParams = {
  /**
   * Date minimum (YYYY-MM-DD)
   */
  drink_date_gte?: string;
  /**
   * Date maximum (YYYY-MM-DD)
   */
  drink_date_lte?: string;
  /**
   * Type de boisson (slug)
   */
  type?: string;
};

export type GetDrinkCountByUserIdParams = {
  /**
   * Date minimum (YYYY-MM-DD)
   */
  drink_date_gte?: string;
  /**
   * Date maximum (YYYY-MM-DD)
   */
  drink_date_lte?: string;
  /**
   * Type de boisson (slug)
   */
  type?: string;
};
